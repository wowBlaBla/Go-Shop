basePath: /
definitions:
  config.EmailConfig:
    properties:
      email:
        type: string
      enabled:
        type: boolean
      key:
        description: SendGrid key
        type: string
      name:
        type: string
    type: object
  config.NotificationConfig:
    properties:
      email:
        $ref: '#/definitions/config.EmailConfig'
        type: object
      enabled:
        type: boolean
    type: object
  config.PaymentConfig:
    properties:
      advancePayment:
        properties:
          details:
            type: string
          enabled:
            type: boolean
        type: object
      default:
        type: string
      enabled:
        type: boolean
      mollie:
        properties:
          enabled:
            type: boolean
          key:
            type: string
          methods:
            type: string
          profileID:
            type: string
        type: object
      onDelivery:
        properties:
          enabled:
            type: boolean
        type: object
      stripe:
        properties:
          enabled:
            type: boolean
          publishedKey:
            type: string
          secretKey:
            type: string
        type: object
      vat:
        type: number
    type: object
  config.ResizeConfig:
    properties:
      enabled:
        type: boolean
      image:
        properties:
          enabled:
            type: boolean
          size:
            description: 128x0,256x0
            type: string
        type: object
      quality:
        type: integer
      thumbnail:
        properties:
          enabled:
            type: boolean
          size:
            description: 64x0,128x0
            type: string
        type: object
    type: object
  config.WranglerConfig:
    properties:
      apiToken:
        type: string
      bin:
        type: string
      enabled:
        type: boolean
    type: object
  handler.Account2View:
    properties:
      admin:
        type: boolean
      email:
        type: string
      emailConfirmed:
        type: boolean
      enabled:
        type: boolean
      expiration:
        type: string
      id:
        type: integer
      login:
        type: string
      notification:
        type: boolean
      profiles:
        items:
          $ref: '#/definitions/handler.ProfileView'
        type: array
      role:
        type: integer
      token:
        type: string
    type: object
  handler.AccountView:
    properties:
      admin:
        type: boolean
      email:
        type: string
      emailConfirmed:
        type: boolean
      enabled:
        type: boolean
      id:
        type: integer
      login:
        type: string
      notification:
        type: boolean
      profiles:
        items:
          $ref: '#/definitions/handler.ProfileView'
        type: array
      role:
        type: integer
    type: object
  handler.AutocompleteRequest:
    properties:
      include:
        type: string
      search:
        type: string
    type: object
  handler.BasicSettingsView:
    properties:
      debug:
        type: boolean
      notification:
        $ref: '#/definitions/config.NotificationConfig'
        type: object
      payment:
        $ref: '#/definitions/config.PaymentConfig'
        type: object
      preview:
        type: string
      resize:
        $ref: '#/definitions/config.ResizeConfig'
        type: object
    type: object
  handler.BasicWranglerView:
    $ref: '#/definitions/config.WranglerConfig'
  handler.CategoriesAutocompleteItem:
    properties:
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      title:
        type: string
    type: object
  handler.CategoriesAutocompleteResponse:
    items:
      $ref: '#/definitions/handler.CategoriesAutocompleteItem'
    type: array
  handler.CategoriesListItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      products:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
    type: object
  handler.CategoriesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.CategoriesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.CategoriesView:
    items:
      $ref: '#/definitions/handler.CategoryView'
    type: array
  handler.CategoryFullView:
    properties:
      content:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
    type: object
  handler.CategoryView:
    properties:
      children:
        items:
          $ref: '#/definitions/handler.CategoryView'
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      parents:
        items:
          $ref: '#/definitions/handler.CategoryView'
        type: array
      products:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
      type:
        description: '"category", "product"'
        type: string
    type: object
  handler.CheckoutRequest:
    properties:
      comment:
        type: string
      coupons:
        items:
          type: string
        type: array
      items:
        items:
          $ref: '#/definitions/handler.NewItem'
        type: array
      paymentMethod:
        type: string
      profileId:
        type: integer
      transportId:
        type: integer
    type: object
  handler.CommandView:
    properties:
      ERROR:
        type: string
      output:
        type: string
      status:
        type: string
    type: object
  handler.ContentAction:
    properties:
      action:
        description: create
        type: string
      name:
        description: new name
        type: string
      title:
        type: string
      type:
        description: folder, file
        type: string
    type: object
  handler.CouponFullView:
    properties:
      description:
        type: string
      discounts:
        items:
          $ref: '#/definitions/handler.DiscountView'
        type: array
      enabled:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  handler.CouponListItem:
    properties:
      amount:
        type: string
      applyTo:
        type: string
      code:
        type: string
      description:
        type: string
      discounts:
        type: integer
      enabled:
        type: boolean
      id:
        type: integer
      minimum:
        type: number
      title:
        type: string
      type:
        type: string
    type: object
  handler.CouponShortView:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  handler.CouponView:
    properties:
      amount:
        type: string
      applyTo:
        type: string
      categories:
        items:
          $ref: '#/definitions/handler.CategoryView'
        type: array
      code:
        type: string
      count:
        type: integer
      description:
        type: string
      enabled:
        type: boolean
      end:
        type: string
      id:
        type: integer
      limit:
        type: integer
      minimum:
        type: number
      products:
        items:
          $ref: '#/definitions/handler.ProductShortView'
        type: array
      start:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  handler.CouponsFullView:
    items:
      $ref: '#/definitions/handler.CouponFullView'
    type: array
  handler.CouponsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.CouponListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.DashboardView:
    properties:
      earnings:
        type: number
      items:
        type: number
      lastOrders:
        items:
          $ref: '#/definitions/handler.LastOrderView'
        type: array
      orders:
        type: number
      pending:
        type: number
      transfers:
        $ref: '#/definitions/handler.TransferView'
        type: object
    type: object
  handler.DeliveriesCosts:
    items:
      $ref: '#/definitions/handler.DeliveryCost'
    type: array
  handler.DeliveryCost:
    properties:
      by:
        type: string
      byVolume:
        type: number
      byWeight:
        type: number
      cost:
        type: string
      fees:
        type: number
      id:
        description: transport ID
        type: integer
      itemFee:
        type: string
      orderFee:
        type: string
      special:
        description: in case of ZIP match
        type: boolean
      sum:
        type: number
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: number
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.DeliveryRequest:
    properties:
      country:
        type: string
      items:
        items:
          $ref: '#/definitions/handler.NewItem'
        type: array
      zip:
        type: string
    type: object
  handler.DeliveryView:
    properties:
      byVolume:
        type: number
      byWeight:
        type: number
      id:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: number
    type: object
  handler.DiscountView:
    properties:
      id:
        type: integer
    type: object
  handler.EmailTemplateView:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      message:
        type: string
      topic:
        type: string
      type:
        type: string
    type: object
  handler.EmailsListItem:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      topic:
        type: string
      type:
        type: string
    type: object
  handler.EmailsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.EmailsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ExistingFile:
    type: object
  handler.ExistingImage:
    type: object
  handler.ExistingOrder:
    properties:
      comment:
        type: string
      status:
        type: string
    type: object
  handler.ExistingTransaction:
    properties:
      status:
        type: string
    type: object
  handler.ExistingUser:
    properties:
      email:
        type: string
      emailConfirmed:
        type: boolean
      notification:
        type: boolean
      password:
        type: string
      role:
        type: integer
    type: object
  handler.File2View:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      size:
        type: integer
      type:
        type: string
      updated:
        type: string
      url:
        type: string
    type: object
  handler.FileView:
    properties:
      content:
        type: string
      description:
        type: string
      draft:
        type: boolean
      modified:
        type: string
      name:
        type: string
      title:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  handler.FilesListItem:
    properties:
      created:
        type: string
      id:
        type: integer
      name:
        type: string
      size:
        type: integer
      type:
        type: string
      updated:
        type: string
      url:
        type: string
    type: object
  handler.FilesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.FilesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.FilterRequest:
    $ref: '#/definitions/handler.ListRequest'
  handler.HTTPCsrf:
    properties:
      csfr:
        type: string
    type: object
  handler.HTTPError:
    properties:
      error:
        type: string
    type: object
  handler.HTTPMessage:
    properties:
      message:
        type: string
    type: object
  handler.HugoSettingsRequest:
    properties:
      description:
        type: string
      keywords:
        type: string
      logo:
        type: string
      paginate:
        type: integer
      theme:
        type: string
      title:
        type: string
    type: object
  handler.HugoSettingsView:
    properties:
      languages:
        additionalProperties:
          properties:
            languageName:
              type: string
            weight:
              type: integer
          type: object
        type: object
      paginate:
        type: integer
      params:
        properties:
          description:
            type: string
          keywords:
            type: string
          logo:
            type: string
        type: object
      theme:
        type: string
      title:
        type: string
    type: object
  handler.ImageView:
    properties:
      createdAt:
        type: string
      height:
        type: integer
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      size:
        type: integer
      updated:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  handler.ImagesListItem:
    properties:
      created:
        type: string
      height:
        type: integer
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      size:
        type: integer
      updated:
        type: string
      width:
        type: integer
    type: object
  handler.ImagesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.ImagesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.InfoView:
    properties:
      application:
        type: string
      authorization:
        type: string
      debug:
        type: boolean
      expirationAt:
        type: string
      hasChanges:
        properties:
          messages:
            items:
              type: string
            type: array
          updated:
            type: string
        type: object
      preview:
        type: string
      started:
        type: string
      user:
        $ref: '#/definitions/handler.UserView'
        type: object
    type: object
  handler.ItemShortView:
    properties:
      discount:
        type: number
      path:
        type: string
      price:
        type: number
      properties:
        items:
          $ref: '#/definitions/handler.PropertyShortView'
        type: array
      quantity:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
      total:
        type: number
      uuid:
        type: string
      variation:
        $ref: '#/definitions/handler.VariationShortView'
        type: object
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.ItemView:
    properties:
      comment:
        description: |-
          Variation VariationShortView `json:",omitempty"`
          Properties []PropertyShortView `json:",omitempty"`
        type: string
      description:
        type: string
      id:
        type: integer
      path:
        type: string
      price:
        type: number
      quantity:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
      total:
        type: number
      uuid:
        type: string
    type: object
  handler.LastOrderView:
    properties:
      created:
        type: string
      id:
        type: integer
      status:
        type: string
      total:
        type: number
    type: object
  handler.ListRequest:
    properties:
      filter:
        additionalProperties:
          type: string
        type: object
      length:
        type: integer
      sort:
        additionalProperties:
          type: string
        type: object
      start:
        type: integer
    type: object
  handler.LoginRequest:
    properties:
      email:
        type: string
      login:
        type: string
      password:
        type: string
      remember:
        type: boolean
    type: object
  handler.MeView:
    properties:
      email:
        type: string
      emailConfirmed:
        type: boolean
      enabled:
        type: boolean
      id:
        type: integer
      isAdmin:
        type: boolean
      login:
        type: string
      profiles:
        items:
          $ref: '#/definitions/handler.ProfileView'
        type: array
      role:
        type: integer
    type: object
  handler.MollieOrderView:
    properties:
      checkout:
        type: string
      id:
        type: string
      profileId:
        type: string
    type: object
  handler.NewAccount:
    properties:
      csrf:
        type: string
      email:
        type: string
    type: object
  handler.NewCategory:
    properties:
      description:
        type: string
      name:
        type: string
      parentId:
        type: integer
      title:
        type: string
    type: object
  handler.NewCommand:
    type: object
  handler.NewCoupon:
    properties:
      code:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      limit:
        type: integer
      title:
        type: string
      type:
        type: string
    type: object
  handler.NewEmailTemplate:
    properties:
      enabled:
        type: boolean
      message:
        type: string
      topic:
        type: string
      type:
        type: string
    type: object
  handler.NewFile:
    properties:
      file:
        type: string
      name:
        type: string
    type: object
  handler.NewImage:
    properties:
      image:
        type: string
      name:
        type: string
    type: object
  handler.NewItem:
    properties:
      categoryId:
        type: integer
      quantity:
        type: integer
      uuid:
        type: string
    type: object
  handler.NewOption:
    properties:
      description:
        type: string
      name:
        type: string
      sort:
        type: integer
      standard:
        type: boolean
      title:
        type: string
      valueId:
        type: integer
    type: object
  handler.NewParameter:
    properties:
      customValue:
        type: string
      filtering:
        type: boolean
      name:
        type: string
      optionId:
        type: integer
      title:
        type: string
      valueId:
        type: integer
    type: object
  handler.NewPrice:
    properties:
      availability:
        type: string
      enabled:
        type: boolean
      price:
        type: number
      propertyId:
        type: integer
      sending:
        type: string
      sku:
        type: string
      valueId:
        type: integer
    type: object
  handler.NewProduct:
    properties:
      categories:
        type: string
      description:
        type: string
      name:
        type: string
      title:
        type: string
    type: object
  handler.NewProfile:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      email:
        type: string
      lastname:
        type: string
      name:
        type: string
      region:
        type: string
      zip:
        type: string
    type: object
  handler.NewProperty:
    properties:
      filtering:
        type: boolean
      name:
        type: string
      optionId:
        type: integer
      sku:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  handler.NewStripeCard:
    properties:
      customerId:
        type: string
      token:
        type: string
    type: object
  handler.NewStripePayment:
    properties:
      cancelURL:
        type: string
      stripeToken:
        type: string
      successURL:
        type: string
    type: object
  handler.NewTag:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      hidden:
        type: boolean
      name:
        type: string
      title:
        type: string
    type: object
  handler.NewTransport:
    properties:
      enabled:
        type: boolean
      item:
        type: string
      kg:
        type: number
      m3:
        type: number
      name:
        type: string
      order:
        type: string
      title:
        type: string
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.NewValue:
    properties:
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  handler.NewVariation:
    properties:
      name:
        type: string
      sku:
        type: string
      title:
        type: string
    type: object
  handler.NewZone:
    properties:
      country:
        type: string
      enabled:
        type: boolean
      zip:
        type: string
    type: object
  handler.NodeView:
    properties:
      children:
        items:
          $ref: '#/definitions/handler.NodeView'
        type: array
      description:
        type: string
      draft:
        type: boolean
      file:
        type: boolean
      modified:
        type: string
      name:
        type: string
      path:
        type: string
      size:
        type: integer
      title:
        type: string
      type:
        type: string
    type: object
  handler.OptionFullView:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      sort:
        type: integer
      standard:
        type: boolean
      title:
        type: string
      valueId:
        type: integer
      values:
        items:
          $ref: '#/definitions/handler.ValueView'
        type: array
    type: object
  handler.OptionPatchRequest:
    properties:
      sort:
        type: integer
    type: object
  handler.OptionShortView:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      sort:
        type: integer
      standard:
        type: boolean
      title:
        type: string
      valueId:
        type: integer
    type: object
  handler.OptionView:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      sort:
        type: integer
      standard:
        type: boolean
      title:
        type: string
      value:
        $ref: '#/definitions/handler.ValueView'
        type: object
      values:
        items:
          $ref: '#/definitions/handler.ValueView'
        type: array
    type: object
  handler.OptionsFullView:
    items:
      $ref: '#/definitions/handler.OptionFullView'
    type: array
  handler.OptionsListItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      sort:
        type: integer
      standard:
        type: boolean
      title:
        type: string
      valueValue:
        type: string
      valuesValues:
        type: string
    type: object
  handler.OptionsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.OptionsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.OrderShortView:
    properties:
      comment:
        type: string
      deliveries:
        items:
          $ref: '#/definitions/handler.DeliveryView'
        type: array
      delivery:
        type: number
      discount:
        type: number
      discount2:
        type: number
      items:
        items:
          $ref: '#/definitions/handler.ItemShortView'
        type: array
      paymentMethods:
        $ref: '#/definitions/handler.PaymentMethodsView'
        type: object
      quantity:
        type: integer
      sum:
        type: number
      total:
        type: number
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.OrderView:
    properties:
      comment:
        type: string
      delivery:
        type: number
      description:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/handler.ItemView'
        type: array
      status:
        type: string
      sum:
        type: number
      total:
        type: number
    type: object
  handler.OrdersListItem:
    properties:
      created:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      total:
        type: number
      userEmail:
        type: string
      userId:
        type: integer
    type: object
  handler.OrdersListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.OrdersListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.OrdersView:
    items:
      $ref: '#/definitions/handler.OrderView'
    type: array
  handler.ParameterView:
    properties:
      customValue:
        type: string
      filtering:
        type: boolean
      id:
        type: integer
      name:
        type: string
      option:
        properties:
          description:
            type: string
          id:
            type: integer
          name:
            type: string
          title:
            type: string
          weight:
            type: integer
        type: object
      optionId:
        type: integer
      title:
        type: string
      type:
        description: select / radio
        type: string
      value:
        properties:
          id:
            type: integer
          thumbnail:
            type: string
          title:
            type: string
        type: object
      valueId:
        type: integer
    type: object
  handler.PaymentMethodsView:
    properties:
      advancePayment:
        properties:
          details:
            type: string
          enabled:
            type: boolean
        type: object
      default:
        type: string
      mollie:
        properties:
          enabled:
            type: boolean
          methods:
            items:
              type: string
            type: array
        type: object
      onDelivery:
        properties:
          enabled:
            type: boolean
        type: object
      stripe:
        properties:
          enabled:
            type: boolean
        type: object
    type: object
  handler.PriceView:
    properties:
      availability:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      price:
        type: number
      propertyId:
        type: integer
      sending:
        type: string
      sku:
        type: string
      valueId:
        type: integer
    type: object
  handler.PricesListItem:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      optionId:
        type: integer
      price:
        type: number
      productTitle:
        type: string
      propertyId:
        type: integer
      propertyTitle:
        type: string
      valueId:
        type: integer
      valueTitle:
        type: string
      variationTitle:
        type: string
    type: object
  handler.PricesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.PricesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ProductShortView:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      thumbnail:
        type: string
      title:
        type: string
    type: object
  handler.ProductView:
    properties:
      availability:
        type: string
      basePrice:
        type: number
      categories:
        items:
          $ref: '#/definitions/handler.CategoryView'
        type: array
      content:
        type: string
      customParameters:
        type: string
      customization:
        type: string
      description:
        type: string
      dimensions:
        type: string
      enabled:
        type: boolean
      end:
        type: string
      files:
        items:
          $ref: '#/definitions/handler.File2View'
        type: array
      id:
        type: integer
      imageId:
        type: integer
      images:
        items:
          $ref: '#/definitions/handler.ImageView'
        type: array
      name:
        type: string
      parameters:
        items:
          $ref: '#/definitions/handler.ParameterView'
        type: array
      properties:
        items:
          properties:
            filtering:
              type: boolean
            id:
              type: integer
            name:
              type: string
            option:
              properties:
                description:
                  type: string
                id:
                  type: integer
                name:
                  type: string
                title:
                  type: string
              type: object
            prices:
              items:
                properties:
                  availability:
                    type: string
                  enabled:
                    type: boolean
                  id:
                    type: integer
                  price:
                    type: number
                  sending:
                    type: string
                  value:
                    properties:
                      availability:
                        type: string
                      id:
                        type: integer
                      sending:
                        type: string
                      thumbnail:
                        type: string
                      title:
                        type: string
                    type: object
                type: object
              type: array
            title:
              type: string
          type: object
        type: array
      salePrice:
        type: number
      sending:
        type: string
      sku:
        type: string
      start:
        type: string
      tags:
        items:
          $ref: '#/definitions/handler.TagView'
        type: array
      thumbnail:
        type: string
      title:
        type: string
      variations:
        items:
          $ref: '#/definitions/handler.VariationView'
        type: array
      weight:
        type: number
    type: object
  handler.ProductsFilterItem:
    properties:
      basePrice:
        type: number
      categoryId:
        type: integer
      description:
        type: string
      id:
        type: integer
      images:
        type: string
      name:
        type: string
      path:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      variations:
        type: string
    type: object
  handler.ProductsFilterResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.ProductsFilterItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ProductsListItem:
    properties:
      categoryId:
        type: integer
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      sku:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      variationsIds:
        type: string
      variationsTitles:
        type: string
    type: object
  handler.ProductsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.ProductsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ProductsShortView:
    items:
      $ref: '#/definitions/handler.ProductShortView'
    type: array
  handler.ProfileView:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        type: string
      id:
        type: integer
      lastname:
        type: string
      name:
        type: string
      region:
        type: string
      transportId:
        type: integer
      zip:
        type: string
    type: object
  handler.PropertyShortView:
    properties:
      price:
        type: number
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  handler.PropertyView:
    properties:
      filtering:
        type: boolean
      id:
        type: integer
      name:
        type: string
      optionId:
        type: integer
      sku:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  handler.StripeCardView:
    type: object
  handler.StripeCardsView:
    type: object
  handler.StripeCheckoutSessionView:
    properties:
      id:
        type: string
    type: object
  handler.StripeCustomerView:
    type: object
  handler.TagView:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      hidden:
        type: boolean
      id:
        type: integer
      name:
        type: string
      title:
        type: string
    type: object
  handler.TagsListItem:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      hidden:
        type: boolean
      id:
        type: integer
      name:
        type: string
      title:
        type: string
    type: object
  handler.TagsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.TagsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.TagsView:
    items:
      $ref: '#/definitions/handler.TagView'
    type: array
  handler.TariffView:
    properties:
      id:
        type: integer
      item:
        type: string
      kg:
        type: number
      m3:
        type: number
      order:
        type: string
      transportId:
        type: integer
      zoneId:
        type: integer
    type: object
  handler.TariffsView:
    items:
      $ref: '#/definitions/handler.TariffView'
    type: array
  handler.TransactionView:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      id:
        type: integer
      orderId:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  handler.TransactionsListItem:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      id:
        type: integer
      orderId:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
      userEmail:
        type: string
      userId:
        type: integer
    type: object
  handler.TransactionsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.TransactionsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.TransferView:
    properties:
      labels:
        items:
          type: string
        type: array
      series:
        items:
          items:
            type: number
          type: array
        type: array
    type: object
  handler.TransportView:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      item:
        type: string
      kg:
        type: number
      m3:
        type: number
      name:
        type: string
      order:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.TransportsListItem:
    properties:
      enabled:
        type: boolean
      id:
        type: integer
      item:
        type: string
      kg:
        type: number
      m3:
        type: number
      name:
        type: string
      order:
        type: string
      title:
        type: string
      volume:
        type: number
      weight:
        type: number
    type: object
  handler.TransportsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.TransportsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.TransportsView:
    items:
      $ref: '#/definitions/handler.TransportView'
    type: array
  handler.User2View:
    properties:
      newPassword:
        type: string
      newPassword2:
        type: string
      oldPassword:
        type: string
    type: object
  handler.UserView:
    properties:
      email:
        type: string
      emailConfirmed:
        type: boolean
      enabled:
        type: boolean
      id:
        type: integer
      login:
        type: string
      notification:
        type: boolean
      role:
        type: integer
    type: object
  handler.UsersListItem:
    properties:
      createdAt:
        type: string
      email:
        type: string
      emailConfirmed:
        type: boolean
      id:
        type: integer
      login:
        type: string
      orders:
        type: integer
      role:
        type: integer
      updatedAt:
        type: string
    type: object
  handler.UsersListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.UsersListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.UsersView:
    items:
      $ref: '#/definitions/handler.UserView'
    type: array
  handler.ValueView:
    properties:
      availability:
        type: string
      description:
        type: string
      id:
        type: integer
      sending:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  handler.ValuesListItem:
    properties:
      id:
        type: integer
      optionTitle:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  handler.ValuesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.ValuesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ValuesView:
    items:
      $ref: '#/definitions/handler.ValueView'
    type: array
  handler.VariationShortView:
    properties:
      thumbnail:
        type: string
      title:
        type: string
    type: object
  handler.VariationView:
    properties:
      availability:
        type: string
      basePrice:
        type: number
      description:
        type: string
      dimensions:
        type: string
      end:
        type: string
      id:
        type: integer
      name:
        type: string
      productId:
        type: integer
      properties:
        items:
          properties:
            filtering:
              type: boolean
            id:
              type: integer
            name:
              type: string
            option:
              properties:
                description:
                  type: string
                id:
                  type: integer
                name:
                  type: string
                title:
                  type: string
              type: object
            prices:
              items:
                properties:
                  availability:
                    type: string
                  enabled:
                    type: boolean
                  id:
                    type: integer
                  price:
                    type: number
                  sending:
                    type: string
                  value:
                    properties:
                      availability:
                        type: string
                      id:
                        type: integer
                      sending:
                        type: string
                      thumbnail:
                        type: string
                      title:
                        type: string
                    type: object
                type: object
              type: array
            title:
              type: string
          type: object
        type: array
      salePrice:
        type: number
      sending:
        type: string
      sku:
        type: string
      start:
        type: string
      thumbnail:
        type: string
      title:
        type: string
      weight:
        type: number
    type: object
  handler.VariationsListItem:
    properties:
      basePrice:
        type: number
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      productId:
        type: integer
      productTitle:
        type: string
      propertiesIds:
        type: string
      propertiesTitles:
        type: string
      thumbnail:
        type: string
      title:
        type: string
    type: object
  handler.VariationsListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.VariationsListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.VariationsView:
    items:
      $ref: '#/definitions/handler.VariationView'
    type: array
  handler.WranglerSettingsView:
    properties:
      accountId:
        type: string
      name:
        type: string
      route:
        type: string
      site:
        properties:
          bucket:
            type: string
        type: object
      type:
        type: string
      workersDev:
        type: boolean
      zoneId:
        type: string
    type: object
  handler.ZoneView:
    properties:
      country:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      zip:
        type: string
    type: object
  handler.ZonesListItem:
    properties:
      ZIP:
        type: string
      country:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  handler.ZonesListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/handler.ZonesListItem'
        type: array
      filtered:
        type: integer
      total:
        type: integer
    type: object
  handler.ZonesView:
    items:
      $ref: '#/definitions/handler.ZoneView'
    type: array
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: GoShop full featured api, see documentation https://docs.google.com/document/d/1VlkAYTqZG9oGvZxnSNDpcuafU-msOb2Qm2FevMJkA7w/edit
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoShop API
  version: "1.0"
paths:
  /api/v1/account:
    get:
      consumes:
      - application/json
      description: get account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AccountView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get account
      tags:
      - account
      - frontend
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handler.NewAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Account2View'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Create account
      tags:
      - account
      - frontend
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/handler.AccountView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.User2View'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update account
      tags:
      - order
  /api/v1/account/orders:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrdersView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get account orders
      tags:
      - account
      - frontend
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/handler.CheckoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post account order
      tags:
      - account
      - frontend
  /api/v1/account/orders/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get order
      tags:
      - account
      - frontend
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingOrder'
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update order by user
      tags:
      - order
  /api/v1/account/orders/{id}/advance_payment/submit:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post advance-payment order
      tags:
      - account
      - frontend
  /api/v1/account/orders/{id}/mollie/submit:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.MollieOrderView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post mollie order
      tags:
      - account
      - frontend
  /api/v1/account/orders/{id}/mollie/success:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCardsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get mollie payment success
      tags:
      - account
      - frontend
  /api/v1/account/orders/{id}/on_delivery/submit:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post on-delivery order
      tags:
      - account
      - frontend
  /api/v1/account/orders/{id}/stripe/card:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCardsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get stripe cards
      tags:
      - account
  /api/v1/account/orders/{id}/stripe/customer:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCustomerView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get stripe customer
      tags:
      - account
  /api/v1/account/orders/{id}/stripe/submit:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCardsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post stripe payment
      tags:
      - account
  /api/v1/account/orders/{id}/stripe/success:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCardsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get stripe payment success
      tags:
      - account
  /api/v1/account/orders/checkout/{id}/stripe:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/handler.NewStripePayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCheckoutSessionView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post order
      tags:
      - account
  /api/v1/account/orders/checkout/{id}/stripe/card:
    post:
      consumes:
      - application/json
      description: See https://stripe.com/docs/api/cards/create
      parameters:
      - description: body
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/handler.NewStripeCard'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.StripeCardView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Post order
      tags:
      - account
  /api/v1/account/profiles:
    get:
      consumes:
      - application/json
      description: get account profiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.ProfileView'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get account profiles
      tags:
      - account
      - frontend
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handler.NewProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProfileView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create profile in existing account
      tags:
      - profile
      - frontend
  /api/v1/categories:
    get:
      consumes:
      - application/json
      description: get string
      parameters:
      - description: Root ID
        in: query
        name: id
        type: integer
      - description: Depth, default 1
        in: query
        name: depth
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoryView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get categories
      tags:
      - category
    post:
      consumes:
      - application/json
      parameters:
      - description: Parent id
        in: query
        name: parent_id
        type: integer
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoriesView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create categories
      tags:
      - category
  /api/v1/categories/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoryFullView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get category
      tags:
      - category
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoryView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update category
      tags:
      - category
  /api/v1/categories/autocomplete:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.AutocompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoriesAutocompleteResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search categories autocomplete
      tags:
      - category
  /api/v1/categories/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Parent id
        in: query
        name: parent_id
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CategoriesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search categories
      tags:
      - category
  /api/v1/category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete category
      tags:
      - category
  /api/v1/checkout:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.CheckoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderShortView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get checkout information
      tags:
      - frontend
  /api/v1/contents:
    get:
      consumes:
      - application/json
      parameters:
      - description: home
        in: query
        name: home
        type: integer
      - description: depth
        in: query
        name: depth
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.NodeView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get contents
      tags:
      - content
  /api/v1/contents/{any}:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FileView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get content
      tags:
      - content
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Post content
      tags:
      - content
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FileView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Put content
      tags:
      - content
  /api/v1/coupons:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CouponsFullView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get coupons
      tags:
      - coupon
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/handler.NewCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CouponView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create coupon
      tags:
      - option
  /api/v1/coupons/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete coupon
      tags:
      - coupon
    get:
      consumes:
      - application/json
      parameters:
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CouponView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get coupon
      tags:
      - option
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/handler.CouponShortView'
      - description: Coupon ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CouponShortView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update coupon
      tags:
      - coupon
  /api/v1/coupons/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CouponsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search coupons
      tags:
      - coupon
  /api/v1/csrf:
    get:
      consumes:
      - application/json
      description: get string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPCsrf'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: get csrf token
      tags:
      - auth
      - frontend
  /api/v1/dashboard:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DashboardView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get dashboard
  /api/v1/delivery:
    post:
      consumes:
      - application/json
      description: my description
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.DeliveryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DeliveriesCosts'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: (DEPRECATED) Calculate shipping cost
      tags:
      - frontend
  /api/v1/files:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewFile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create file
      tags:
      - file
  /api/v1/files/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete file
      tags:
      - file
    get:
      consumes:
      - application/json
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.File2View'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get file
      tags:
      - file
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingFile'
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update file
      tags:
      - file
  /api/v1/files/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FilesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search files
      tags:
      - file
  /api/v1/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category RelPath
        in: query
        name: relPath
        required: true
        type: string
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.FilterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductsFilterResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Filter products
      tags:
      - frontend
  /api/v1/images:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Products id
        in: query
        name: pid
        type: integer
      - description: body
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/handler.NewImage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create image
      tags:
      - image
  /api/v1/images/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete image
      tags:
      - image
    get:
      consumes:
      - application/json
      parameters:
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ImageView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get image
      tags:
      - image
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingImage'
      - description: Image ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update image
      tags:
      - image
  /api/v1/images/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ImagesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search images
      tags:
      - image
  /api/v1/info:
    get:
      consumes:
      - application/json
      description: get string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.InfoView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get info
  /api/v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: login
      tags:
      - auth
      - frontend
  /api/v1/logout:
    get:
      consumes:
      - application/json
      description: get string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: logout
      tags:
      - auth
      - frontend
  /api/v1/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.MeView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get me
  /api/v1/notification/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/handler.NewEmailTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.EmailTemplateView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create email template
      tags:
      - notification
  /api/v1/notification/email/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Email template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete email template
      tags:
      - notification
    get:
      consumes:
      - application/json
      parameters:
      - description: EmailTemplate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.EmailTemplateView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get email template
      tags:
      - notification
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: transport
        required: true
        schema:
          $ref: '#/definitions/handler.EmailTemplateView'
      - description: Email Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.EmailTemplateView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update email template
      tags:
      - notification
  /api/v1/notification/email/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.EmailsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search email templates
      tags:
      - notification
  /api/v1/options:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OptionsFullView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get options
      tags:
      - option
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/handler.NewOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OptionView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create option
      tags:
      - option
  /api/v1/options/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete option
      tags:
      - option
    get:
      consumes:
      - application/json
      parameters:
      - description: Option ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OptionView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get option
      tags:
      - option
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/handler.OptionShortView'
      - description: Option ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OptionShortView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update option
      tags:
      - option
  /api/v1/options/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OptionsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search options
      tags:
      - option
  /api/v1/orders/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete order
      tags:
      - order
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get order
      tags:
      - order
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingOrder'
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrderShortView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update order
      tags:
      - order
  /api/v1/orders/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.OrdersListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search orders
      tags:
      - order
  /api/v1/parameter/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Parameter ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ParameterView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update parameter
      tags:
      - parameter
  /api/v1/parameters:
    post:
      consumes:
      - application/json
      parameters:
      - description: Products id
        in: query
        name: product_id
        required: true
        type: integer
      - description: body
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/handler.NewParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ParameterView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create parameter
      tags:
      - parameter
  /api/v1/parameters/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Parameter id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete parameter
      tags:
      - parameter
    get:
      consumes:
      - application/json
      parameters:
      - description: Parameter ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ParameterView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get parameter
      tags:
      - parameter
  /api/v1/payment_methods:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PaymentMethodsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: (DEPRECATED) Get account payment methods
      tags:
      - account
      - frontend
  /api/v1/prepare:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.NewCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CommandView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Make prepare
  /api/v1/preview:
    get:
      consumes:
      - application/json
      description: run preview
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: preview
      tags:
      - frontend
  /api/v1/prices:
    get:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: property_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PriceView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get prices
      tags:
      - price
    post:
      consumes:
      - application/json
      parameters:
      - description: Property id
        in: query
        name: property_id
        required: true
        type: integer
      - description: body
        in: body
        name: price
        required: true
        schema:
          $ref: '#/definitions/handler.NewPrice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PriceView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create prices
      tags:
      - price
  /api/v1/prices/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Price ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete price
      tags:
      - price
    get:
      consumes:
      - application/json
      parameters:
      - description: Price ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PriceView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get price
      tags:
      - price
    put:
      consumes:
      - application/json
      parameters:
      - description: Price ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.NewPrice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PriceView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update price
      tags:
      - price
  /api/v1/prices/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PricesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search prices
      tags:
      - price
  /api/v1/products:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductsShortView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get products
      tags:
      - product
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create product
      tags:
      - product
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Products ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete product
      tags:
      - product
    get:
      consumes:
      - application/json
      parameters:
      - description: Products ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get product
      tags:
      - product
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: Products id
        in: query
        name: id
        type: integer
      - description: body
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.NewProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update product
      tags:
      - product
  /api/v1/products/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category id
        in: query
        name: id
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProductsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search products
      tags:
      - product
  /api/v1/profiles:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handler.NewProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProfileView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: (DEPRECATED) Create profile without having account
      tags:
      - profile
  /api/v1/properties/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Property id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete property
      tags:
      - property
    get:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PropertyView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get property
      tags:
      - property
    put:
      consumes:
      - application/json
      parameters:
      - description: Property ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PropertyView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update property
      tags:
      - property
  /api/v1/properties/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: variation_id
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search properties
      tags:
      - property
  /api/v1/publish:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.NewCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CommandView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Make publish
  /api/v1/render:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.NewCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CommandView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Make render
  /api/v1/reset:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: reset password
      tags:
      - auth
      - frontend
  /api/v1/settings/basic:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.BasicSettingsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get basic settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.BasicSettingsView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Set basic settings
      tags:
      - settings
  /api/v1/settings/hugo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HugoSettingsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get hugo settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.HugoSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Set hugo settings
      tags:
      - settings
  /api/v1/settings/wrangler:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.BasicWranglerView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get wrangler settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.WranglerSettingsView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Set wrangler settings
      tags:
      - settings
  /api/v1/tags:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get tags
      tags:
      - tag
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: option
        required: true
        schema:
          $ref: '#/definitions/handler.NewTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create tag
      tags:
      - tag
  /api/v1/tags/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete tag
      tags:
      - tag
    get:
      consumes:
      - application/json
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get tag
      tags:
      - tag
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/handler.TagView'
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update tag
      tags:
      - tag
  /api/v1/tags/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search tags
      tags:
      - tag
  /api/v1/tariffs:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TariffsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get tariffs
  /api/v1/transactions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete transaction
      tags:
      - transaction
    get:
      consumes:
      - application/json
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransactionView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get transaction
      tags:
      - transaction
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingTransaction'
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransactionView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update transaction
      tags:
      - transaction
  /api/v1/transactions/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransactionsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search transactions
      tags:
      - transaction
  /api/v1/transports:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransportsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get transports
      tags:
      - transport
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: transport
        required: true
        schema:
          $ref: '#/definitions/handler.NewTransport'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransportView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create transport
      tags:
      - transport
  /api/v1/transports/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Transport ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete transport
      tags:
      - transport
    get:
      consumes:
      - application/json
      parameters:
      - description: Transport ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransportView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get transport
      tags:
      - transport
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: transport
        required: true
        schema:
          $ref: '#/definitions/handler.TransportView'
      - description: Transport ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TagView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update transport
      tags:
      - transport
  /api/v1/transports/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.TransportsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search transports
      tags:
      - transport
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: get string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UsersView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get users
      tags:
      - user
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get string
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ExistingUser'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update user
      tags:
      - user
  /api/v1/users/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UsersListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search users
      tags:
      - user
  /api/v1/values:
    get:
      consumes:
      - application/json
      parameters:
      - description: Option ID
        in: query
        name: option_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ValuesView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: get option values
      tags:
      - value
    post:
      consumes:
      - application/json
      parameters:
      - description: Option ID
        in: query
        name: option_id
        required: true
        type: integer
      - description: body
        in: body
        name: value
        required: true
        schema:
          $ref: '#/definitions/handler.NewValue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ValueView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create value
      tags:
      - value
  /api/v1/values/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Value ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete value
      tags:
      - value
    get:
      consumes:
      - application/json
      parameters:
      - description: Value ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ValueView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get value
      tags:
      - value
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: value
        required: true
        schema:
          $ref: '#/definitions/handler.ValueView'
      - description: Value ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ValueView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update option value
      tags:
      - value
  /api/v1/values/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Option ID
        in: query
        name: option_id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ValuesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search option values
      tags:
      - value
  /api/v1/variations:
    get:
      consumes:
      - application/json
      parameters:
      - description: Products ID
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationsView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get variations
      tags:
      - variation
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewVariation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create variation
      tags:
      - variation
  /api/v1/variations/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete variation
      tags:
      - variation
    get:
      consumes:
      - application/json
      parameters:
      - description: Variation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get variation
      tags:
      - variation
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: Variation id
        in: query
        name: id
        type: integer
      - description: body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/handler.NewVariation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Update variation
      tags:
      - variation
  /api/v1/variations/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: Products ID
        in: query
        name: id
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.VariationsListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search variations
      tags:
      - variation
  /api/v1/zones:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ZonesView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get zones
      tags:
      - zone
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/handler.NewZone'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ZoneView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create zone
      tags:
      - zone
  /api/v1/zones/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HTTPMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Delete zone
      tags:
      - zone
    get:
      consumes:
      - application/json
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ZoneView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Get zone
      tags:
      - zone
    put:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/handler.ZoneView'
      - description: Zone ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ZoneView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: update zone
      tags:
      - zone
  /api/v1/zones/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ZonesListResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Search zones
      tags:
      - zone
  /properties:
    post:
      consumes:
      - application/json
      description: Create property binding to product or variation
      parameters:
      - description: Product Id
        in: query
        name: product_id
        type: integer
      - description: Variation Id
        in: query
        name: variation_id
        type: integer
      - description: body
        in: body
        name: property
        required: true
        schema:
          $ref: '#/definitions/handler.NewProperty'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.PropertyView'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - BasicAuth: []
      summary: Create property
      tags:
      - property
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
